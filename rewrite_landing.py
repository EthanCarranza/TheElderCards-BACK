from pathlib import Path
landing_path = Path(r"c:\REPOS\TheElderCards-FRONT\src\Components\Landing.tsx")
landing_content = """import { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { apiFetch } from \"./api\";\nimport { extractErrorMessage } from \"../utils/errors\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport SideBanner from \"./SideBanner\";\nimport HeroSection from \"./HeroSection\";\nimport FloatingToast from \"./FloatingToast\";\n\nfunction Landing() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { login } = useAuth();\n  const [toastMessage, setToastMessage] = useState(\"\");\n\n  useEffect(() => {\n    const state = location.state as\n      | {\n          registrationSuccess?: boolean;\n          credentials?: { email: string; password: string };\n        }\n      | undefined;\n\n    if (!state?.registrationSuccess) return;\n\n    setToastMessage(\"Registro exitoso. Iniciando sesi\\u00f3n...\");\n\n    const credentials = state.credentials;\n    const cleanupNavigation = () => {\n      navigate(location.pathname, { replace: true, state: {} });\n    };\n\n    const autoLogin = async () => {\n      if (!credentials) {\n        setToastMessage(\"Registro exitoso, pero introduce tus credenciales manualmente.\");\n        cleanupNavigation();\n        return;\n      }\n\n      try {\n        const response = await apiFetch(\"/users/login\", {\n          method: \"post\",\n          body: credentials,\n        });\n\n        if (response.status !== 200) {\n          setToastMessage(\"Registro exitoso, pero no pudimos iniciar sesi\\u00f3n autom\\u00e1ticamente.\");\n          return;\n        }\n\n        const data = response.data as {\n          token: string;\n          user: { email: string; id: string; role: string };\n        };\n\n        login({\n          email: data.user.email,\n          userId: data.user.id,\n          token: data.token,\n          role: data.user.role,\n        });\n\n        setToastMessage(\"Registro exitoso. Sesi\\u00f3n iniciada autom\\u00e1ticamente.\");\n      } catch (error) {\n        setToastMessage(\n          extractErrorMessage(\n            error,\n            \"Registro exitoso, pero fall\\u00f3 el inicio de sesi\\u00f3n autom\\u00e1tico.\"\n          )\n        );\n      } finally {\n        cleanupNavigation();\n      }\n    };\n\n    void autoLogin();\n  }, [location, login, navigate]);\n\n  useEffect(() => {\n    if (!toastMessage) return;\n\n    const timeoutId = window.setTimeout(() => {\n      setToastMessage(\"\");\n    }, 4000);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [toastMessage]);\n\n  const handleCloseToast = () => {\n    setToastMessage(\"\");\n  };\n\n  return (\n    <div className=\"relative min-h-screen bg-cover bg-center\">\n      <FloatingToast message={toastMessage} onClose={handleCloseToast} />\n      <div className=\"flex\">\n        <SideBanner image=\"/bg.webp\" position=\"left\" />\n        <div className=\"w-4/6 bg-black bg-opacity-90 min-h-screen\">\n          <Navbar />\n          <HeroSection title=\"\" image=\"logo.png\" />\n          <HeroSection title=\"\\u00a1Crea tus propias cartas!\" image=\"hero.jpg\" />\n          <Footer />\n        </div>\n        <SideBanner image=\"/bg.webp\" position=\"right\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Landing;\n"""\nlanding_path.write_text(landing_content, encoding="utf-8")
